/*
 * This file is generated by jOOQ.
 */
package persistence.database.generated.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import persistence.database.generated.Indexes;
import persistence.database.generated.Keys;
import persistence.database.generated.Public;
import persistence.database.generated.tables.records.ScheduleProfileRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScheduleProfile extends TableImpl<ScheduleProfileRecord> {

    private static final long serialVersionUID = 755035417;

    /**
     * The reference instance of <code>public.schedule_profile</code>
     */
    public static final ScheduleProfile SCHEDULE_PROFILE = new ScheduleProfile();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ScheduleProfileRecord> getRecordType() {
        return ScheduleProfileRecord.class;
    }

    /**
     * The column <code>public.schedule_profile.scheduleid</code>.
     */
    public final TableField<ScheduleProfileRecord, Integer> SCHEDULEID = createField(DSL.name("scheduleid"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.schedule_profile.profileid</code>.
     */
    public final TableField<ScheduleProfileRecord, Integer> PROFILEID = createField(DSL.name("profileid"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.schedule_profile</code> table reference
     */
    public ScheduleProfile() {
        this(DSL.name("schedule_profile"), null);
    }

    /**
     * Create an aliased <code>public.schedule_profile</code> table reference
     */
    public ScheduleProfile(String alias) {
        this(DSL.name(alias), SCHEDULE_PROFILE);
    }

    /**
     * Create an aliased <code>public.schedule_profile</code> table reference
     */
    public ScheduleProfile(Name alias) {
        this(alias, SCHEDULE_PROFILE);
    }

    private ScheduleProfile(Name alias, Table<ScheduleProfileRecord> aliased) {
        this(alias, aliased, null);
    }

    private ScheduleProfile(Name alias, Table<ScheduleProfileRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ScheduleProfile(Table<O> child, ForeignKey<O, ScheduleProfileRecord> key) {
        super(child, key, SCHEDULE_PROFILE);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SCHEDULE_PROFILE_PKEY);
    }

    @Override
    public UniqueKey<ScheduleProfileRecord> getPrimaryKey() {
        return Keys.SCHEDULE_PROFILE_PKEY;
    }

    @Override
    public List<UniqueKey<ScheduleProfileRecord>> getKeys() {
        return Arrays.<UniqueKey<ScheduleProfileRecord>>asList(Keys.SCHEDULE_PROFILE_PKEY);
    }

    @Override
    public List<ForeignKey<ScheduleProfileRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ScheduleProfileRecord, ?>>asList(Keys.SCHEDULE_PROFILE__FKSCHEDULE_P151836, Keys.SCHEDULE_PROFILE__FKSCHEDULE_P999153);
    }

    public Schedule schedule() {
        return new Schedule(this, Keys.SCHEDULE_PROFILE__FKSCHEDULE_P151836);
    }

    public Profile profile() {
        return new Profile(this, Keys.SCHEDULE_PROFILE__FKSCHEDULE_P999153);
    }

    @Override
    public ScheduleProfile as(String alias) {
        return new ScheduleProfile(DSL.name(alias), this);
    }

    @Override
    public ScheduleProfile as(Name alias) {
        return new ScheduleProfile(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ScheduleProfile rename(String name) {
        return new ScheduleProfile(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ScheduleProfile rename(Name name) {
        return new ScheduleProfile(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
