/*
 * This file is generated by jOOQ.
 */
package persistence.database.generated.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import persistence.database.generated.Indexes;
import persistence.database.generated.Keys;
import persistence.database.generated.Public;
import persistence.database.generated.tables.records.BuddysRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Buddys extends TableImpl<BuddysRecord> {

    private static final long serialVersionUID = -1174740979;

    /**
     * The reference instance of <code>public.buddys</code>
     */
    public static final Buddys BUDDYS = new Buddys();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BuddysRecord> getRecordType() {
        return BuddysRecord.class;
    }

    /**
     * The column <code>public.buddys.profileid</code>.
     */
    public final TableField<BuddysRecord, Integer> PROFILEID = createField(DSL.name("profileid"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.buddys.profileid2</code>.
     */
    public final TableField<BuddysRecord, Integer> PROFILEID2 = createField(DSL.name("profileid2"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.buddys.active_buddy</code>. This is to see if the people are buddys or not. If they have been boddy has been dismissed then you still need to be able to see there interactions and the like.
     */
    public final TableField<BuddysRecord, Boolean> ACTIVE_BUDDY = createField(DSL.name("active_buddy"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "This is to see if the people are buddys or not. If they have been boddy has been dismissed then you still need to be able to see there interactions and the like.");

    /**
     * Create a <code>public.buddys</code> table reference
     */
    public Buddys() {
        this(DSL.name("buddys"), null);
    }

    /**
     * Create an aliased <code>public.buddys</code> table reference
     */
    public Buddys(String alias) {
        this(DSL.name(alias), BUDDYS);
    }

    /**
     * Create an aliased <code>public.buddys</code> table reference
     */
    public Buddys(Name alias) {
        this(alias, BUDDYS);
    }

    private Buddys(Name alias, Table<BuddysRecord> aliased) {
        this(alias, aliased, null);
    }

    private Buddys(Name alias, Table<BuddysRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Buddys(Table<O> child, ForeignKey<O, BuddysRecord> key) {
        super(child, key, BUDDYS);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.BUDDYS_PKEY);
    }

    @Override
    public UniqueKey<BuddysRecord> getPrimaryKey() {
        return Keys.BUDDYS_PKEY;
    }

    @Override
    public List<UniqueKey<BuddysRecord>> getKeys() {
        return Arrays.<UniqueKey<BuddysRecord>>asList(Keys.BUDDYS_PKEY);
    }

    @Override
    public List<ForeignKey<BuddysRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<BuddysRecord, ?>>asList(Keys.BUDDYS__FKBUDDYS967094, Keys.BUDDYS__FKBUDDYS740159);
    }

    public Profile buddys_Fkbuddys967094() {
        return new Profile(this, Keys.BUDDYS__FKBUDDYS967094);
    }

    public Profile buddys_Fkbuddys740159() {
        return new Profile(this, Keys.BUDDYS__FKBUDDYS740159);
    }

    @Override
    public Buddys as(String alias) {
        return new Buddys(DSL.name(alias), this);
    }

    @Override
    public Buddys as(Name alias) {
        return new Buddys(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Buddys rename(String name) {
        return new Buddys(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Buddys rename(Name name) {
        return new Buddys(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, Boolean> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
