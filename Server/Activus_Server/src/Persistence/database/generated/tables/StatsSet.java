/*
 * This file is generated by jOOQ.
 */
package persistence.database.generated.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import persistence.database.generated.Indexes;
import persistence.database.generated.Keys;
import persistence.database.generated.Public;
import persistence.database.generated.tables.records.StatsSetRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StatsSet extends TableImpl<StatsSetRecord> {

    private static final long serialVersionUID = -1872102662;

    /**
     * The reference instance of <code>public.stats_set</code>
     */
    public static final StatsSet STATS_SET = new StatsSet();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StatsSetRecord> getRecordType() {
        return StatsSetRecord.class;
    }

    /**
     * The column <code>public.stats_set.statsid</code>.
     */
    public final TableField<StatsSetRecord, Integer> STATSID = createField(DSL.name("statsid"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.stats_set.setid</code>.
     */
    public final TableField<StatsSetRecord, Integer> SETID = createField(DSL.name("setid"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.stats_set</code> table reference
     */
    public StatsSet() {
        this(DSL.name("stats_set"), null);
    }

    /**
     * Create an aliased <code>public.stats_set</code> table reference
     */
    public StatsSet(String alias) {
        this(DSL.name(alias), STATS_SET);
    }

    /**
     * Create an aliased <code>public.stats_set</code> table reference
     */
    public StatsSet(Name alias) {
        this(alias, STATS_SET);
    }

    private StatsSet(Name alias, Table<StatsSetRecord> aliased) {
        this(alias, aliased, null);
    }

    private StatsSet(Name alias, Table<StatsSetRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> StatsSet(Table<O> child, ForeignKey<O, StatsSetRecord> key) {
        super(child, key, STATS_SET);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.STATS_SET_PKEY);
    }

    @Override
    public UniqueKey<StatsSetRecord> getPrimaryKey() {
        return Keys.STATS_SET_PKEY;
    }

    @Override
    public List<UniqueKey<StatsSetRecord>> getKeys() {
        return Arrays.<UniqueKey<StatsSetRecord>>asList(Keys.STATS_SET_PKEY);
    }

    @Override
    public List<ForeignKey<StatsSetRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<StatsSetRecord, ?>>asList(Keys.STATS_SET__FKSTATS_SET948616, Keys.STATS_SET__FKSTATS_SET793324);
    }

    public Stats stats() {
        return new Stats(this, Keys.STATS_SET__FKSTATS_SET948616);
    }

    public Set set() {
        return new Set(this, Keys.STATS_SET__FKSTATS_SET793324);
    }

    @Override
    public StatsSet as(String alias) {
        return new StatsSet(DSL.name(alias), this);
    }

    @Override
    public StatsSet as(Name alias) {
        return new StatsSet(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StatsSet rename(String name) {
        return new StatsSet(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public StatsSet rename(Name name) {
        return new StatsSet(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
